// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ZsndIndex.pb.h"

@implementation ZsndIndexRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ZsndIndexRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MIndex ()
@property (retain) NSMutableArray* mutableFocusList;
@property (retain) NSMutableArray* mutableModuleList;
@end

@implementation MIndex

@synthesize mutableFocusList;
@synthesize mutableModuleList;
- (void) dealloc {
  self.mutableFocusList = nil;
  self.mutableModuleList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static MIndex* defaultMIndexInstance = nil;
+ (void) initialize {
  if (self == [MIndex class]) {
    defaultMIndexInstance = [[MIndex alloc] init];
  }
}
+ (MIndex*) defaultInstance {
  return defaultMIndexInstance;
}
- (MIndex*) defaultInstance {
  return defaultMIndexInstance;
}
- (NSArray*) focusList {
  return mutableFocusList;
}
- (MFocus*) focusAtIndex:(int32_t) index {
  id value = [mutableFocusList objectAtIndex:index];
  return value;
}
- (NSArray*) moduleList {
  return mutableModuleList;
}
- (MMdoule*) moduleAtIndex:(int32_t) index {
  id value = [mutableModuleList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (MFocus* element in self.focusList) {
    [output writeMessage:1 value:element];
  }
  for (MMdoule* element in self.moduleList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (MFocus* element in self.focusList) {
    size += computeMessageSize(1, element);
  }
  for (MMdoule* element in self.moduleList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MIndex*) parseFromData:(NSData*) data {
  return (MIndex*)[[[MIndex builder] mergeFromData:data] build];
}
+ (MIndex*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MIndex*)[[[MIndex builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MIndex*) parseFromInputStream:(NSInputStream*) input {
  return (MIndex*)[[[MIndex builder] mergeFromInputStream:input] build];
}
+ (MIndex*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MIndex*)[[[MIndex builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MIndex*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MIndex*)[[[MIndex builder] mergeFromCodedInputStream:input] build];
}
+ (MIndex*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MIndex*)[[[MIndex builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MIndex_Builder*) builder {
  return [[[MIndex_Builder alloc] init] autorelease];
}
+ (MIndex_Builder*) builderWithPrototype:(MIndex*) prototype {
  return [[MIndex builder] mergeFrom:prototype];
}
- (MIndex_Builder*) builder {
  return [MIndex builder];
}
@end

@interface MIndex_Builder()
@property (retain) MIndex* result;
@end

@implementation MIndex_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MIndex alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MIndex_Builder*) clear {
  self.result = [[[MIndex alloc] init] autorelease];
  return self;
}
- (MIndex_Builder*) clone {
  return [MIndex builderWithPrototype:result];
}
- (MIndex*) defaultInstance {
  return [MIndex defaultInstance];
}
- (MIndex*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MIndex*) buildPartial {
  MIndex* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MIndex_Builder*) mergeFrom:(MIndex*) other {
  if (other == [MIndex defaultInstance]) {
    return self;
  }
  if (other.mutableFocusList.count > 0) {
    if (result.mutableFocusList == nil) {
      result.mutableFocusList = [NSMutableArray array];
    }
    [result.mutableFocusList addObjectsFromArray:other.mutableFocusList];
  }
  if (other.mutableModuleList.count > 0) {
    if (result.mutableModuleList == nil) {
      result.mutableModuleList = [NSMutableArray array];
    }
    [result.mutableModuleList addObjectsFromArray:other.mutableModuleList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MIndex_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MIndex_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MFocus_Builder* subBuilder = [MFocus builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFocus:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MMdoule_Builder* subBuilder = [MMdoule builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addModule:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) focusList {
  if (result.mutableFocusList == nil) { return [NSArray array]; }
  return result.mutableFocusList;
}
- (MFocus*) focusAtIndex:(int32_t) index {
  return [result focusAtIndex:index];
}
- (MIndex_Builder*) replaceFocusAtIndex:(int32_t) index with:(MFocus*) value {
  [result.mutableFocusList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MIndex_Builder*) addAllFocus:(NSArray*) values {
  if (result.mutableFocusList == nil) {
    result.mutableFocusList = [NSMutableArray array];
  }
  [result.mutableFocusList addObjectsFromArray:values];
  return self;
}
- (MIndex_Builder*) clearFocusList {
  result.mutableFocusList = nil;
  return self;
}
- (MIndex_Builder*) addFocus:(MFocus*) value {
  if (result.mutableFocusList == nil) {
    result.mutableFocusList = [NSMutableArray array];
  }
  [result.mutableFocusList addObject:value];
  return self;
}
- (NSArray*) moduleList {
  if (result.mutableModuleList == nil) { return [NSArray array]; }
  return result.mutableModuleList;
}
- (MMdoule*) moduleAtIndex:(int32_t) index {
  return [result moduleAtIndex:index];
}
- (MIndex_Builder*) replaceModuleAtIndex:(int32_t) index with:(MMdoule*) value {
  [result.mutableModuleList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MIndex_Builder*) addAllModule:(NSArray*) values {
  if (result.mutableModuleList == nil) {
    result.mutableModuleList = [NSMutableArray array];
  }
  [result.mutableModuleList addObjectsFromArray:values];
  return self;
}
- (MIndex_Builder*) clearModuleList {
  result.mutableModuleList = nil;
  return self;
}
- (MIndex_Builder*) addModule:(MMdoule*) value {
  if (result.mutableModuleList == nil) {
    result.mutableModuleList = [NSMutableArray array];
  }
  [result.mutableModuleList addObject:value];
  return self;
}
@end

@interface MFocus ()
@property (retain) NSString* id;
@property (retain) NSString* img;
@end

@implementation MFocus

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) value {
  hasImg_ = !!value;
}
@synthesize img;
- (void) dealloc {
  self.id = nil;
  self.img = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.img = @"";
  }
  return self;
}
static MFocus* defaultMFocusInstance = nil;
+ (void) initialize {
  if (self == [MFocus class]) {
    defaultMFocusInstance = [[MFocus alloc] init];
  }
}
+ (MFocus*) defaultInstance {
  return defaultMFocusInstance;
}
- (MFocus*) defaultInstance {
  return defaultMFocusInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasImg) {
    [output writeString:2 value:self.img];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasImg) {
    size += computeStringSize(2, self.img);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MFocus*) parseFromData:(NSData*) data {
  return (MFocus*)[[[MFocus builder] mergeFromData:data] build];
}
+ (MFocus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFocus*)[[[MFocus builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MFocus*) parseFromInputStream:(NSInputStream*) input {
  return (MFocus*)[[[MFocus builder] mergeFromInputStream:input] build];
}
+ (MFocus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFocus*)[[[MFocus builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFocus*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MFocus*)[[[MFocus builder] mergeFromCodedInputStream:input] build];
}
+ (MFocus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MFocus*)[[[MFocus builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MFocus_Builder*) builder {
  return [[[MFocus_Builder alloc] init] autorelease];
}
+ (MFocus_Builder*) builderWithPrototype:(MFocus*) prototype {
  return [[MFocus builder] mergeFrom:prototype];
}
- (MFocus_Builder*) builder {
  return [MFocus builder];
}
@end

@interface MFocus_Builder()
@property (retain) MFocus* result;
@end

@implementation MFocus_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MFocus alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MFocus_Builder*) clear {
  self.result = [[[MFocus alloc] init] autorelease];
  return self;
}
- (MFocus_Builder*) clone {
  return [MFocus builderWithPrototype:result];
}
- (MFocus*) defaultInstance {
  return [MFocus defaultInstance];
}
- (MFocus*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MFocus*) buildPartial {
  MFocus* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MFocus_Builder*) mergeFrom:(MFocus*) other {
  if (other == [MFocus defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MFocus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MFocus_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setImg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (MFocus_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (MFocus_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasImg {
  return result.hasImg;
}
- (NSString*) img {
  return result.img;
}
- (MFocus_Builder*) setImg:(NSString*) value {
  result.hasImg = YES;
  result.img = value;
  return self;
}
- (MFocus_Builder*) clearImg {
  result.hasImg = NO;
  result.img = @"";
  return self;
}
@end

@interface MMdoule ()
@property (retain) NSString* id;
@property (retain) NSString* img;
@property (retain) NSString* name;
@property (retain) NSString* desc;
@property (retain) NSString* code;
@property int32_t isRecommend;
@end

@implementation MMdoule

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasImg {
  return !!hasImg_;
}
- (void) setHasImg:(BOOL) value {
  hasImg_ = !!value;
}
@synthesize img;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value {
  hasCode_ = !!value;
}
@synthesize code;
- (BOOL) hasIsRecommend {
  return !!hasIsRecommend_;
}
- (void) setHasIsRecommend:(BOOL) value {
  hasIsRecommend_ = !!value;
}
@synthesize isRecommend;
- (void) dealloc {
  self.id = nil;
  self.img = nil;
  self.name = nil;
  self.desc = nil;
  self.code = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.img = @"";
    self.name = @"";
    self.desc = @"";
    self.code = @"";
    self.isRecommend = 0;
  }
  return self;
}
static MMdoule* defaultMMdouleInstance = nil;
+ (void) initialize {
  if (self == [MMdoule class]) {
    defaultMMdouleInstance = [[MMdoule alloc] init];
  }
}
+ (MMdoule*) defaultInstance {
  return defaultMMdouleInstance;
}
- (MMdoule*) defaultInstance {
  return defaultMMdouleInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasImg) {
    [output writeString:2 value:self.img];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasDesc) {
    [output writeString:4 value:self.desc];
  }
  if (self.hasCode) {
    [output writeString:5 value:self.code];
  }
  if (self.hasIsRecommend) {
    [output writeInt32:6 value:self.isRecommend];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasImg) {
    size += computeStringSize(2, self.img);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasDesc) {
    size += computeStringSize(4, self.desc);
  }
  if (self.hasCode) {
    size += computeStringSize(5, self.code);
  }
  if (self.hasIsRecommend) {
    size += computeInt32Size(6, self.isRecommend);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MMdoule*) parseFromData:(NSData*) data {
  return (MMdoule*)[[[MMdoule builder] mergeFromData:data] build];
}
+ (MMdoule*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMdoule*)[[[MMdoule builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MMdoule*) parseFromInputStream:(NSInputStream*) input {
  return (MMdoule*)[[[MMdoule builder] mergeFromInputStream:input] build];
}
+ (MMdoule*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMdoule*)[[[MMdoule builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMdoule*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MMdoule*)[[[MMdoule builder] mergeFromCodedInputStream:input] build];
}
+ (MMdoule*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MMdoule*)[[[MMdoule builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MMdoule_Builder*) builder {
  return [[[MMdoule_Builder alloc] init] autorelease];
}
+ (MMdoule_Builder*) builderWithPrototype:(MMdoule*) prototype {
  return [[MMdoule builder] mergeFrom:prototype];
}
- (MMdoule_Builder*) builder {
  return [MMdoule builder];
}
@end

@interface MMdoule_Builder()
@property (retain) MMdoule* result;
@end

@implementation MMdoule_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MMdoule alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MMdoule_Builder*) clear {
  self.result = [[[MMdoule alloc] init] autorelease];
  return self;
}
- (MMdoule_Builder*) clone {
  return [MMdoule builderWithPrototype:result];
}
- (MMdoule*) defaultInstance {
  return [MMdoule defaultInstance];
}
- (MMdoule*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MMdoule*) buildPartial {
  MMdoule* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MMdoule_Builder*) mergeFrom:(MMdoule*) other {
  if (other == [MMdoule defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasImg) {
    [self setImg:other.img];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasIsRecommend) {
    [self setIsRecommend:other.isRecommend];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MMdoule_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MMdoule_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setImg:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setDesc:[input readString]];
        break;
      }
      case 42: {
        [self setCode:[input readString]];
        break;
      }
      case 48: {
        [self setIsRecommend:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (MMdoule_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (MMdoule_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasImg {
  return result.hasImg;
}
- (NSString*) img {
  return result.img;
}
- (MMdoule_Builder*) setImg:(NSString*) value {
  result.hasImg = YES;
  result.img = value;
  return self;
}
- (MMdoule_Builder*) clearImg {
  result.hasImg = NO;
  result.img = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MMdoule_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MMdoule_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (MMdoule_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (MMdoule_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (NSString*) code {
  return result.code;
}
- (MMdoule_Builder*) setCode:(NSString*) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (MMdoule_Builder*) clearCode {
  result.hasCode = NO;
  result.code = @"";
  return self;
}
- (BOOL) hasIsRecommend {
  return result.hasIsRecommend;
}
- (int32_t) isRecommend {
  return result.isRecommend;
}
- (MMdoule_Builder*) setIsRecommend:(int32_t) value {
  result.hasIsRecommend = YES;
  result.isRecommend = value;
  return self;
}
- (MMdoule_Builder*) clearIsRecommend {
  result.hasIsRecommend = NO;
  result.isRecommend = 0;
  return self;
}
@end

@interface MUnread ()
@property int32_t module1;
@property int32_t module2;
@property int32_t module3;
@property int32_t module4;
@property int32_t module5;
@property int32_t module6;
@end

@implementation MUnread

- (BOOL) hasModule1 {
  return !!hasModule1_;
}
- (void) setHasModule1:(BOOL) value {
  hasModule1_ = !!value;
}
@synthesize module1;
- (BOOL) hasModule2 {
  return !!hasModule2_;
}
- (void) setHasModule2:(BOOL) value {
  hasModule2_ = !!value;
}
@synthesize module2;
- (BOOL) hasModule3 {
  return !!hasModule3_;
}
- (void) setHasModule3:(BOOL) value {
  hasModule3_ = !!value;
}
@synthesize module3;
- (BOOL) hasModule4 {
  return !!hasModule4_;
}
- (void) setHasModule4:(BOOL) value {
  hasModule4_ = !!value;
}
@synthesize module4;
- (BOOL) hasModule5 {
  return !!hasModule5_;
}
- (void) setHasModule5:(BOOL) value {
  hasModule5_ = !!value;
}
@synthesize module5;
- (BOOL) hasModule6 {
  return !!hasModule6_;
}
- (void) setHasModule6:(BOOL) value {
  hasModule6_ = !!value;
}
@synthesize module6;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.module1 = 0;
    self.module2 = 0;
    self.module3 = 0;
    self.module4 = 0;
    self.module5 = 0;
    self.module6 = 0;
  }
  return self;
}
static MUnread* defaultMUnreadInstance = nil;
+ (void) initialize {
  if (self == [MUnread class]) {
    defaultMUnreadInstance = [[MUnread alloc] init];
  }
}
+ (MUnread*) defaultInstance {
  return defaultMUnreadInstance;
}
- (MUnread*) defaultInstance {
  return defaultMUnreadInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasModule1) {
    [output writeInt32:1 value:self.module1];
  }
  if (self.hasModule2) {
    [output writeInt32:2 value:self.module2];
  }
  if (self.hasModule3) {
    [output writeInt32:3 value:self.module3];
  }
  if (self.hasModule4) {
    [output writeInt32:4 value:self.module4];
  }
  if (self.hasModule5) {
    [output writeInt32:5 value:self.module5];
  }
  if (self.hasModule6) {
    [output writeInt32:6 value:self.module6];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasModule1) {
    size += computeInt32Size(1, self.module1);
  }
  if (self.hasModule2) {
    size += computeInt32Size(2, self.module2);
  }
  if (self.hasModule3) {
    size += computeInt32Size(3, self.module3);
  }
  if (self.hasModule4) {
    size += computeInt32Size(4, self.module4);
  }
  if (self.hasModule5) {
    size += computeInt32Size(5, self.module5);
  }
  if (self.hasModule6) {
    size += computeInt32Size(6, self.module6);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MUnread*) parseFromData:(NSData*) data {
  return (MUnread*)[[[MUnread builder] mergeFromData:data] build];
}
+ (MUnread*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUnread*)[[[MUnread builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MUnread*) parseFromInputStream:(NSInputStream*) input {
  return (MUnread*)[[[MUnread builder] mergeFromInputStream:input] build];
}
+ (MUnread*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUnread*)[[[MUnread builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUnread*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MUnread*)[[[MUnread builder] mergeFromCodedInputStream:input] build];
}
+ (MUnread*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MUnread*)[[[MUnread builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MUnread_Builder*) builder {
  return [[[MUnread_Builder alloc] init] autorelease];
}
+ (MUnread_Builder*) builderWithPrototype:(MUnread*) prototype {
  return [[MUnread builder] mergeFrom:prototype];
}
- (MUnread_Builder*) builder {
  return [MUnread builder];
}
@end

@interface MUnread_Builder()
@property (retain) MUnread* result;
@end

@implementation MUnread_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MUnread alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MUnread_Builder*) clear {
  self.result = [[[MUnread alloc] init] autorelease];
  return self;
}
- (MUnread_Builder*) clone {
  return [MUnread builderWithPrototype:result];
}
- (MUnread*) defaultInstance {
  return [MUnread defaultInstance];
}
- (MUnread*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MUnread*) buildPartial {
  MUnread* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MUnread_Builder*) mergeFrom:(MUnread*) other {
  if (other == [MUnread defaultInstance]) {
    return self;
  }
  if (other.hasModule1) {
    [self setModule1:other.module1];
  }
  if (other.hasModule2) {
    [self setModule2:other.module2];
  }
  if (other.hasModule3) {
    [self setModule3:other.module3];
  }
  if (other.hasModule4) {
    [self setModule4:other.module4];
  }
  if (other.hasModule5) {
    [self setModule5:other.module5];
  }
  if (other.hasModule6) {
    [self setModule6:other.module6];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MUnread_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MUnread_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setModule1:[input readInt32]];
        break;
      }
      case 16: {
        [self setModule2:[input readInt32]];
        break;
      }
      case 24: {
        [self setModule3:[input readInt32]];
        break;
      }
      case 32: {
        [self setModule4:[input readInt32]];
        break;
      }
      case 40: {
        [self setModule5:[input readInt32]];
        break;
      }
      case 48: {
        [self setModule6:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasModule1 {
  return result.hasModule1;
}
- (int32_t) module1 {
  return result.module1;
}
- (MUnread_Builder*) setModule1:(int32_t) value {
  result.hasModule1 = YES;
  result.module1 = value;
  return self;
}
- (MUnread_Builder*) clearModule1 {
  result.hasModule1 = NO;
  result.module1 = 0;
  return self;
}
- (BOOL) hasModule2 {
  return result.hasModule2;
}
- (int32_t) module2 {
  return result.module2;
}
- (MUnread_Builder*) setModule2:(int32_t) value {
  result.hasModule2 = YES;
  result.module2 = value;
  return self;
}
- (MUnread_Builder*) clearModule2 {
  result.hasModule2 = NO;
  result.module2 = 0;
  return self;
}
- (BOOL) hasModule3 {
  return result.hasModule3;
}
- (int32_t) module3 {
  return result.module3;
}
- (MUnread_Builder*) setModule3:(int32_t) value {
  result.hasModule3 = YES;
  result.module3 = value;
  return self;
}
- (MUnread_Builder*) clearModule3 {
  result.hasModule3 = NO;
  result.module3 = 0;
  return self;
}
- (BOOL) hasModule4 {
  return result.hasModule4;
}
- (int32_t) module4 {
  return result.module4;
}
- (MUnread_Builder*) setModule4:(int32_t) value {
  result.hasModule4 = YES;
  result.module4 = value;
  return self;
}
- (MUnread_Builder*) clearModule4 {
  result.hasModule4 = NO;
  result.module4 = 0;
  return self;
}
- (BOOL) hasModule5 {
  return result.hasModule5;
}
- (int32_t) module5 {
  return result.module5;
}
- (MUnread_Builder*) setModule5:(int32_t) value {
  result.hasModule5 = YES;
  result.module5 = value;
  return self;
}
- (MUnread_Builder*) clearModule5 {
  result.hasModule5 = NO;
  result.module5 = 0;
  return self;
}
- (BOOL) hasModule6 {
  return result.hasModule6;
}
- (int32_t) module6 {
  return result.module6;
}
- (MUnread_Builder*) setModule6:(int32_t) value {
  result.hasModule6 = YES;
  result.module6 = value;
  return self;
}
- (MUnread_Builder*) clearModule6 {
  result.hasModule6 = NO;
  result.module6 = 0;
  return self;
}
@end

